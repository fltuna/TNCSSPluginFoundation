name: .NET CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  release:
    types: [created]

jobs:
  build:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/') == false && contains(github.event.head_commit.message, '[no ci]') == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: nuget restore

      - name: Build
        run: dotnet build -c Release -p:DebugType=None -p:DebugSymbols=false

  publish:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release -p:DebugType=None -p:DebugSymbols=false

      - name: Create release artifacts
        run: |
          mkdir artifacts
          mkdir artifacts\shared\TNCSSPluginFoundation\
          Copy-Item -Path "TNCSSPluginFoundation\bin\Release\*\TNCSSPluginFoundation.dll" -Destination "artifacts\shared\TNCSSPluginFoundation\TNCSSPluginFoundation.dll" -Force

      - name: Compress artifacts
        run:
          Compress-Archive -Path artifacts/* -Destination TNCSSPluginFoundation.zip

      - name: Upload release assets
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: TNCSSPluginFoundation.zip

  release:
    runs-on: windows-latest
    needs: publish

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: artifacts/

      - name: check files
        run : |
          tree

      - name: Create Release and Upload Asset
        run: |
          gh release create "${{ github.ref_name }}" --title "Release ${{ github.ref_name }}" --generate-notes --draft=false artifacts/TNCSSPluginFoundation.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  
  publish-nuget:
    runs-on: windows-latest
    needs: release

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore
        working-directory: TNCSSPluginFoundation

      - name: Build
        run: dotnet build -c Release -p:DebugType=None -p:DebugSymbols=false
        working-directory: TNCSSPluginFoundation

      - name: Pack
        run: dotnet pack --configuration Release
        working-directory: TNCSSPluginFoundation

      - name: Extract version
        id: package_version
        run: |
          $xml = [Xml] (Get-Content TNCSSPluginFoundation/TNCSSPluginFoundation.csproj)
          $version = $xml.Project.PropertyGroup.PackageVersion
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Publish to Nuget
        run: |
          dotnet nuget push "bin/Release/TNCSSPluginFoundation.${{env.VERSION}}.nupkg" --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
        working-directory: TNCSSPluginFoundation